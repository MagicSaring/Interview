智能指针主要用于管理在堆上分配的内存,它将普通的指针封装为一个栈对象.
当栈对象的生存周期结束后,会在析构函数中释放掉申请的内存,从而防止内存泄漏.
C++ 11中最常用的智能指针类型为shared_ptr,它采用引用计数的方法,
记录当前内存资源被多少个智能指针引用.该引用计数的内存在堆上分配.
当新增一个时引用计数加1,当过期时引用计数减一.
只有引用计数为0时,智能指针才会自动释放引用的内存资源.
对shared_ptr进行初始化时不能将一个普通指针直接赋值给智能指针,
因为一个是指针,一个是类.
可以通过make_shared函数或者通过构造函数传入普通指针.
并可以通过get函数获得普通指针。