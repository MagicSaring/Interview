Fork:创建一个和当前进程映像一样的进程可以通过fork( )系统调用:
#include <sys/types.h>
#include <unistd.h>

pid_t fork(void);

成功调用fork( )会创建一个新的进程,它几乎与调用fork( )的进程一模一样,这两个进程都会继续运行.
在子进程中,成功的fork( )调用会返回0.在父进程中fork( )返回子进程的pid.
如果出现错误,fork( )返回一个负值.

父进程产生子进程使用fork拷贝出来一个父进程的副本,
此时只拷贝了父进程的页表,两个进程都读同一块内存,当有进程写的时候使用写实拷贝机制分配内存,
exec函数可以加载一个elf文件去替换父进程,从此父进程和子进程就可以运行不同的程序了.
fork从父进程返回子进程的pid,从子进程返回0.调用了wait的父进程将会发生阻塞,直到有子进程状态改变,执行成功返回0,错误返回-1.
exec执行成功则子进程从新的程序开始运行,无返回值.执行失败返回-1 