
进程间通信(InterProcess Communication)是指在不同进程之间传播或交换信息
IPC方式通常有管道(包括无名管道和有名管道),消息队列,信号,信号量,共享内存,Socket,Streams等,其中Socket和Streams支持不同主机上两个进程IPC

1.管道:速度慢,容量有限,只有父子进程能通讯    

2.消息队列:容量受到系统限制,且要注意第一次读的时候,要考虑上一次没有读完数据的问题

3.信号(Signal)：信号是比较复杂的通信方式，用于通知接受进程有某种事件发生，除了用于进程间通信外，进程还可以发送信号给进程本身;
Linux除了支持Unix早期信号语义函数sigal外，还支持语义符合Posix.1标准的信号函数sigaction(实际上，该函数是基于BSD的，BSD为了实现可靠信号机制，又能够统一对外接口，
用sigaction函数重新实现了signal函数)。    

4.信号量:不能传递复杂消息,只能用来同步    

5.共享内存区:能够很容易控制容量,速度快,但要保持同步,比如一个进程在写的时候,另一个进程要注意读写的问题,
相当于线程中的线程安全,当然,共享内存区同样可以用作线程间通讯,不过没这个必要,线程间本来就已经共享了同一进程内的一块内存

6.Socket,Streams等

 

